#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤ —Ç–∞–±–ª–∏—Ü—É promocode_usage
"""

import os
import sys
import uuid
sys.path.append('/app/backend')

from supabase_client import supabase_client
import asyncio

async def add_promocode_usage():
    """–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞"""
    try:
        # –ü–ê–†–ê–ú–ï–¢–†–´ –î–õ–Ø –ò–ó–ú–ï–ù–ï–ù–ò–Ø:
        promocode_to_use = "–®–ê–ú–ò–õ–¨"  # ‚Üê‚Üê –ò–ó–ú–ï–ù–ò–¢–ï –ù–ê –ù–£–ñ–ù–´–ô –ü–†–û–ú–û–ö–û–î
        user_email = "test@example.com"  # ‚Üê‚Üê –ò–ó–ú–ï–ù–ò–¢–ï EMAIL –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
        
        print(f"üîç –ò—â–µ–º –ø—Ä–æ–º–æ–∫–æ–¥: {promocode_to_use}")
        
        # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–º–æ–∫–æ–¥
        promocode = await supabase_client.find_one("promocodes", {"code": promocode_to_use})
        if not promocode:
            print(f"‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ {promocode_to_use} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        print(f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞–π–¥–µ–Ω: {promocode['description']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–º–æ–∫–æ–¥
        existing_usage = await supabase_client.find_one("promocode_usage", {
            "promocode_code": promocode_to_use,
            "student_email": user_email
        })
        
        if existing_usage:
            print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_email} —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promocode_to_use}")
            return
            
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
        usage_data = {
            "promocode_id": promocode["id"],
            "promocode_code": promocode_to_use,
            "student_id": str(uuid.uuid4()),  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π ID —Å—Ç—É–¥–µ–Ω—Ç–∞
            "student_email": user_email,
            "course_ids": promocode.get("course_ids", []),
            "used_at": "2025-08-12T21:00:00Z"
        }
        
        result = await supabase_client.create_record("promocode_usage", usage_data)
        print(f"‚úÖ –£–°–ü–ï–®–ù–û –î–û–ë–ê–í–õ–ï–ù–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {result['student_email']}")
        print(f"   üéüÔ∏è –ü—Ä–æ–º–æ–∫–æ–¥: {result['promocode_code']}")
        print(f"   üìÖ –î–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: {result['used_at']}")
        print(f"   üÜî ID –∑–∞–ø–∏—Å–∏: {result['id']}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞
        new_used_count = promocode.get("used_count", 0) + 1
        await supabase_client.update_record("promocodes", "id", promocode["id"], {
            "used_count": new_used_count
        })
        print(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω —Å—á–µ—Ç—á–∏–∫: {new_used_count} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(add_promocode_usage())