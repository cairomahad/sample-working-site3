#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã promocode_usage –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
"""

import os
import sys
sys.path.append('/app/backend')

from supabase_client import supabase_client
import asyncio

async def setup_promocode_tables():
    """–°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤"""
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ promocode_usage
        try:
            usage_data = await supabase_client.get_records("promocode_usage", limit=1)
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ promocode_usage —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        except:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ promocode_usage –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - –≤–æ–∑–º–æ–∂–Ω–æ, –µ—ë –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –≤ Supabase")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ user_course_access
        try:
            access_data = await supabase_client.get_records("user_course_access", limit=1)
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ user_course_access —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        except:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ user_course_access –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - –≤–æ–∑–º–æ–∂–Ω–æ, –µ—ë –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –≤ Supabase")
        
        print("\nüìã SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤ Supabase SQL Editor):")
        print("""
-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã promocode_usage
CREATE TABLE IF NOT EXISTS promocode_usage (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    promocode_id UUID NOT NULL,
    promocode_code TEXT NOT NULL,
    student_id UUID NOT NULL,
    student_email TEXT NOT NULL,
    course_ids JSONB DEFAULT '[]'::jsonb,
    used_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã user_course_access
CREATE TABLE IF NOT EXISTS user_course_access (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    student_email TEXT NOT NULL,
    course_id UUID NOT NULL,
    promocode_id UUID,
    granted_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
CREATE INDEX IF NOT EXISTS idx_promocode_usage_email ON promocode_usage(student_email);
CREATE INDEX IF NOT EXISTS idx_promocode_usage_code ON promocode_usage(promocode_code);
CREATE INDEX IF NOT EXISTS idx_user_course_access_email ON user_course_access(student_email);
CREATE INDEX IF NOT EXISTS idx_user_course_access_course ON user_course_access(course_id);
        """)
        
        print("\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º...")
        promocodes = await supabase_client.get_records("promocodes")
        for promo in promocodes:
            print(f"  üìé {promo.get('code')} - {promo.get('description')}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(setup_promocode_tables())