#!/usr/bin/env python3
"""
–î–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ SQL
"""

import os
import sys
sys.path.append('/app/backend')

from supabase_client import supabase_client
import asyncio

async def add_promocode_usage_direct():
    """–î–æ–±–∞–≤–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –ø—Ä—è–º—ã–º SQL –∑–∞–ø—Ä–æ—Å–æ–º"""
    try:
        # –ü–ê–†–ê–ú–ï–¢–†–´:
        promocode_code = "–®–ê–ú–ò–õ–¨"
        user_email = "student@example.com"
        
        print(f"üîç –î–æ–±–∞–≤–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞: {promocode_code}")
        
        # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–º–æ–∫–æ–¥
        promocode = await supabase_client.find_one("promocodes", {"code": promocode_code})
        if not promocode:
            print(f"‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ {promocode_code} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
            
        print(f"‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞–π–¥–µ–Ω: {promocode['description']}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
        usage_data = {
            "promocode_id": promocode["id"],
            "promocode_code": promocode_code,
            "student_email": user_email,
            "course_ids": promocode.get("course_ids", []) if promocode.get("course_ids") else []
        }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        existing = await supabase_client.find_one("promocode_usage", {
            "promocode_code": promocode_code,
            "student_email": user_email
        })
        
        if existing:
            print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_email} —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –ø—Ä–æ–º–æ–∫–æ–¥ {promocode_code}")
            return
        
        result = await supabase_client.create_record("promocode_usage", usage_data)
        print(f"‚úÖ –£–°–ü–ï–®–ù–û –î–û–ë–ê–í–õ–ï–ù–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
        print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {result['student_email']}")
        print(f"   üéüÔ∏è –ü—Ä–æ–º–æ–∫–æ–¥: {result['promocode_code']}")
        print(f"   üÜî ID –∑–∞–ø–∏—Å–∏: {result['id']}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥–∞
        new_used_count = promocode.get("used_count", 0) + 1
        await supabase_client.update_record("promocodes", "id", promocode["id"], {
            "used_count": new_used_count
        })
        print(f"   üìä –û–±–Ω–æ–≤–ª–µ–Ω —Å—á–µ—Ç—á–∏–∫: {new_used_count} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        all_usages = await supabase_client.get_records("promocode_usage")
        print(f"\nüìã –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏: {len(all_usages)}")
        for usage in all_usages:
            print(f"   - {usage['student_email']} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª {usage['promocode_code']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(add_promocode_usage_direct())