#!/usr/bin/env python3
"""
–£–¥–∞–ª–µ–Ω–∏–µ –¥–µ–º–æ –∫—É—Ä—Å–æ–≤ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
sys.path.append('/app/backend')

from supabase_client import supabase_client
import asyncio

async def remove_demo_courses():
    """–£–¥–∞–ª–∏—Ç—å –¥–µ–º–æ –∫—É—Ä—Å—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é"""
    try:
        print("üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –î–ï–ú–û –ö–£–†–°–û–í")
        print("=" * 50)
        
        # –î–µ–º–æ –∫—É—Ä—Å—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        demo_course_names = ["–û—Å–Ω–æ–≤—ã –ò—Å–ª–∞–º–∞", "–û—á–∏—â–µ–Ω–∏–µ –∏ –º–æ–ª–∏—Ç–≤–∞", "–ò–∑—É—á–µ–Ω–∏–µ –ö–æ—Ä–∞–Ω–∞"]
        
        for course_name in demo_course_names:
            print(f"\nüéØ –£–¥–∞–ª—è–µ–º –∫—É—Ä—Å: {course_name}")
            
            # –ù–∞–π—Ç–∏ –∫—É—Ä—Å
            course = await supabase_client.find_one("courses", {"title": course_name})
            if not course:
                print(f"   ‚ö†Ô∏è –ö—É—Ä—Å '{course_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
                
            course_id = course["id"]
            print(f"   üÜî ID –∫—É—Ä—Å–∞: {course_id}")
            
            # 1. –£–¥–∞–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
            try:
                test_results = await supabase_client.get_records("test_results", {"course_id": course_id})
                for result in test_results:
                    await supabase_client.delete_record("test_results", "id", result["id"])
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤: {len(test_results)}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤: {e}")
            
            # 2. –£–¥–∞–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–∫–æ–≤
            try:
                lesson_progress = await supabase_client.get_records("lesson_progress", {"course_id": course_id})
                for progress in lesson_progress:
                    await supabase_client.delete_record("lesson_progress", "id", progress["id"])
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—Ä–æ–∫–æ–≤: {len(lesson_progress)}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")
            
            # 3. –£–¥–∞–ª—è–µ–º –≤–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–æ–≤
            try:
                tests = await supabase_client.get_records("tests", {"course_id": course_id})
                total_questions = 0
                for test in tests:
                    questions = await supabase_client.get_records("test_questions", {"test_id": test["id"]})
                    for question in questions:
                        await supabase_client.delete_record("test_questions", "id", question["id"])
                        total_questions += 1
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤ —Ç–µ—Å—Ç–æ–≤: {total_questions}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}")
            
            # 4. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç—ã
            try:
                tests = await supabase_client.get_records("tests", {"course_id": course_id})
                for test in tests:
                    await supabase_client.delete_record("tests", "id", test["id"])
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {len(tests)}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: {e}")
            
            # 5. –£–¥–∞–ª—è–µ–º —É—Ä–æ–∫–∏
            try:
                lessons = await supabase_client.get_records("lessons", {"course_id": course_id})
                for lesson in lessons:
                    await supabase_client.delete_record("lessons", "id", lesson["id"])
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —É—Ä–æ–∫–æ–≤: {len(lessons)}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —É—Ä–æ–∫–æ–≤: {e}")
            
            # 6. –£–¥–∞–ª—è–µ–º –¥–æ—Å—Ç—É–ø—ã –∫ –∫—É—Ä—Å—É (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞)
            try:
                user_accesses = await supabase_client.get_records("user_course_access", {"course_id": course_id})
                for access in user_accesses:
                    await supabase_client.delete_record("user_course_access", "id", access["id"])
                print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –¥–æ—Å—Ç—É–ø–∞: {len(user_accesses)}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ user_course_access –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞: {e}")
            
            # 7. –ù–∞–∫–æ–Ω–µ—Ü, —É–¥–∞–ª—è–µ–º —Å–∞–º –∫—É—Ä—Å
            try:
                await supabase_client.delete_record("courses", "id", course_id)
                print(f"   üéØ –ö–£–†–° '{course_name}' –ü–û–õ–ù–û–°–¢–¨–Æ –£–î–ê–õ–ï–ù!")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫—É—Ä—Å–∞: {e}")
        
        print("\n" + "=" * 50)
        print("‚úÖ –£–î–ê–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫—É—Ä—Å—ã
        remaining_courses = await supabase_client.get_records("courses")
        print(f"\nüìö –û—Å—Ç–∞–≤—à–∏–µ—Å—è –∫—É—Ä—Å—ã: {len(remaining_courses)}")
        for course in remaining_courses:
            print(f"   ‚Ä¢ {course['title']} (—Å–æ–∑–¥–∞–Ω: {course['created_at']})")
            
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(remove_demo_courses())