#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ promocodes
"""

import os
import sys
sys.path.append('/app/backend')

from supabase_client import supabase_client
import asyncio

async def check_promocodes():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–º–æ–∫–æ–¥—ã –≤ –±–∞–∑–µ"""
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ promocodes...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã
        promocodes = await supabase_client.get_records("promocodes")
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤: {len(promocodes)}")
        
        for promo in promocodes:
            print(f"\n–ü—Ä–æ–º–æ–∫–æ–¥: {promo.get('code', 'N/A')}")
            print(f"  –¢–∏–ø: {promo.get('promocode_type', 'N/A')}")
            print(f"  –û–ø–∏—Å–∞–Ω–∏–µ: {promo.get('description', 'N/A')}")
            print(f"  –ö—É—Ä—Å—ã: {promo.get('course_ids', [])}")
            print(f"  –ê–∫—Ç–∏–≤–µ–Ω: {promo.get('is_active', False)}")
            print(f"  –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: {promo.get('used_count', 0)}/{promo.get('max_uses', 'unlimited')}")
        
        if not promocodes:
            print("‚ùå –ü—Ä–æ–º–æ–∫–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(check_promocodes())